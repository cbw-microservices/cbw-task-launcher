version: '3.8'

services:
  cbw-task-ms:
    build: ./cbw-task-ms
    container_name: cbw-task-ms
    depends_on:
      - mongo
      - redis
      - nats
    environment:
      - PORT=${TASK_MS_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
    restart: always

  client-gateway:
    build: ./client-gateway
    container_name: client-gateway
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    depends_on:
      - nats
    environment:
      - PORT=${GATEWAY_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
    restart: always

  auth-ms:
    build: ./auth-ms
    container_name: auth-ms
    depends_on:
      - mongo-init-replica
      - nats
    environment:
      - PORT=${AUTH_MS_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=${AUTH_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    restart: always

  mongo:
    image: mongo:7
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    command: ["--replSet", "rs0"]
    restart: always

  mongo-init-replica:
    image: mongo:7
    depends_on:
      - mongo
    entrypoint: >
      bash -c "
        sleep 5 &&
        mongosh --host mongo:27017 --eval '
          rs.initiate({
            _id: \"rs0\",
            members: [{ _id: 0, host: \"mongo:27017\" }]
          })
        '
      "

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  nats:
    image: nats:latest
    container_name: nats
    ports:
      - "4222:4222"
    restart: always

volumes:
  mongo-data:
